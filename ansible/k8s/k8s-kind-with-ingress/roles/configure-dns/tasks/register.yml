---
- name: spawn DNSutils Pod to get DNS servers
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    state: present
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: dnsutils
        namespace: default
      spec:
        containers:
        - name: dnsutils
          image: gcr.io/kubernetes-e2e-test-images/dnsutils:1.3
          command:
          - sleep
          - "3600"
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
    wait: yes
    wait_timeout: 60

- name: get DNS server entry from DNSutils pod with kubectl exec
  kubernetes.core.k8s_exec:
    kubeconfig: "{{ k8s_kubeconfig_path }}"
    namespace: default
    pod: dnsutils
    command: "cat /etc/resolv.conf"
  register: dnsutils_resolv_conf

- name: package the DNS server and search domain into a dictionary
  set_fact:
    dns_config:
      search: "{{ dnsutils_resolv_conf.stdout_lines[0] | regex_replace('search ', '') | split(' ') }}"
      addresses: "{{ dnsutils_resolv_conf.stdout_lines[1] | regex_replace('nameserver ', '') | split(' ')}}"

- name: get the number of next netplan config to be stored on host
  ansible.builtin.shell:
    cmd: "ls -1 /etc/netplan | awk -F'-' '{print $1}' | bc"
  register: latest_netplan_config

- name: template the netplan config for Kind cluster DNS
  ansible.builtin.template:
    src: netplan-config.yaml.j2
    dest: "/etc/netplan/0{{ latest_netplan_config.stdout | int + 1 }}-{{ k8s_kind_with_ingress_setup_cluster_name }}-config.yaml"
    mode: '0644'
