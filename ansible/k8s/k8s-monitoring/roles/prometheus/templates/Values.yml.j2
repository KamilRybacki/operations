global:
  nameOverride: "{{ k8s_monitoring_prometheus_name }}"
  fullnameOverride: "{{ k8s_monitoring_prometheus_name }}"
  namespaceOverride: "{{ k8s_monitoring_namespace }}"
  
operator:
  enabled: "{{ k8s_monitoring_prometheus_operator_enabled }}"

  podLabels: "{{ k8s_monitoring_prometheus_operator_pod_labels }}"
  podAnnotations: "{{ k8s_monitoring_prometheus_operator_pod_annotations }}"

  image:
    tag: "{{ _k8s_monitoring_prometheus_operator_image_tag }}"
  args: "{{ k8s_monitoring_prometheus_operator_pod_args_override }}"
  
  extraEnvVars: "{{ k8s_monitoring_prometheus_operator_pod_extra_env_vars }}"
  extraEnvVarsCM: "{{ k8s_monitoring_prometheus_operator_pod_extra_configmaps }}"
  extraEnvVarsSecret: "{{ k8s_monitoring_prometheus_operator_pod_extra_secret }}"
  extraVolumes: "{{ _k8s_monitoring_prometheus_operator_pod_extra_volumes }}"
  extraVolumeMounts: "{{ _k8s_monitoring_prometheus_operator_pod_extra_volume_mounts }}"
  
  sidecars: "{{ _k8s_monitoring_prometheus_operator_pod_sidecar_containers }}"
  initContainers: "{{ _k8s_monitoring_prometheus_operator_pod_init_containers }}"

  automountServiceAccountToken: "{{ _k8s_monitoring_prometheus_operator_service_account_automount }}"
  serviceAccount:
    create: "{{ _k8s_monitoring_prometheus_operator_service_account_create }}"
    name: "{{ _k8s_monitoring_prometheus_operator_service_account_name }}"
    annotations: "{{ _k8s_monitoring_prometheus_operator_service_account_annotations }}"
    automountServiceAccountToken: "{{ _k8s_monitoring_prometheus_operator_service_account_automount }}"

  {% if _k8s_monitoring_prometheus_operator_pod_security_context | length > 0 %}
  
  podSecurityContext: {{ _k8s_monitoring_prometheus_operator_pod_security_context | to_nice_yaml(indent=4) }}
  
  {% endif %}

  {% if _k8s_monitoring_prometheus_operator_container_security_context | length > 0 %}

  containerSecurityContext: {{ _k8s_monitoring_prometheus_operator_container_security_context | to_nice_yaml(indent=4) }}

  {% endif %}

  service:
    type: "{{ _k8s_monitoring_prometheus_operator_service_type }}"
    ports:
      http: "{{ k8s_monitoring_prometheus_operator_service_port }}"
    annotations: "{{ k8s_monitoring_prometheus_operator_service_annotations }}"
    labels: "{{ k8s_monitoring_prometheus_operator_service_labels }}"

  networkPolicy:
    enabled: "{{ _k8s_monitoring_prometheus_operator_network_policy_enabled }}"
    allowExternal: "{{ _k8s_monitoring_prometheus_operator_network_policy_allow_external }}"
    allowExternalEgress: "{{ _k8s_monitoring_prometheus_operator_network_policy_allow_external_egress }}"
    extraIngress: "{{ _k8s_monitoring_prometheus_operator_network_policy_extra_ingress_rules }}"
    extraEgress: "{{ _k8s_monitoring_prometheus_operator_network_policy_extra_egress_rules }}"

    {% if _k8s_monitoring_prometheus_operator_network_policy_extra_config | length > 0 %}

    {{ k8s_monitoring_prometheus_operator_network_policy_extra_config | to_nice_yaml(indent=4) }}

    {% endif %}

  serviceMonitor:
    enabled: "{{ k8s_monitoring_prometheus_operator_service_monitor_enabled }}"
    scrapeInterval: "{{ k8s_monitoring_prometheus_operator_service_monitor_scrape_interval }}"
    scrapeTimeout: "{{ k8s_monitoring_prometheus_operator_service_monitor_scrape_timeout }}"
  
  resources:
    limits:
      cpu: "{{ k8s_monitoring_prometheus_operator_pod_limits_cpu }}"
      memory: "{{ k8s_monitoring_prometheus_operator_pod_limits_memory }}"
    requests:
      cpu: "{{ k8s_monitoring_prometheus_operator_pod_requests_cpu }}"
      memory: "{{ k8s_monitoring_prometheus_operator_pod_requests_memory }}"

{% if k8s_monitoring_prometheus_operator_extra_config | length > 0 %}

{{ k8s_monitoring_prometheus_operator_extra_config | to_nice_yaml(indent=0) }}

{% endif %}

prometheus:
  enabled: "{{ k8s_monitoring_prometheus_enabled }}"
  replicaCount: "{{ k8s_monitoring_prometheus_replicas }}"
  shards: "{{ k8s_monitoring_prometheus_shards }}"

  scrapeInterval: "{{ k8s_monitoring_prometheus_scrape_interval }}"
  scrapeTimeout: "{{ k8s_monitoring_prometheus_scrape_timeout }}"
  evaluationInterval: "{{ k8s_monitoring_prometheus_evaluation_interval }}"

  retention: "{{ k8s_monitoring_prometheus_retention }}"
  retentionSize: "{{ k8s_monitoring_prometheus_retention_size }}"
  
  persistence:
    enabled: "{{ k8s_monitoring_prometheus_persistence_enabled }}"
    size: "{{ k8s_monitoring_prometheus_persistence_storage_size }}"
    storageClass: "{{ k8s_monitoring_prometheus_persistence_storage_class }}"
    accessModes: "{{ k8s_monitoring_prometheus_persistence_storage_access_modes }}"
    annotations: "{{ k8s_monitoring_prometheus_persistence_storage_annotations }}"
  volumes: {{ k8s_monitoring_prometheus_persistence_extra_volumes | to_nice_yaml(indent=2)}}
  volumeMounts: {{ k8s_monitoring_prometheus_persistence_extra_volume_mounts | to_nice_yaml(indent=2)}}

  remoteRead: "{{ k8s_monitoring_prometheus_remote_read }}"
  remoteWrite: "{{ k8s_monitoring_prometheus_remote_write }}"

  image:
    tag: "{{ _k8s_monitoring_prometheus_image_tag }}"
  additionalArgs: "{{ k8s_monitoring_prometheus_pod_extra_args }}"

  secrets: "{{ k8s_monitoring_prometheus_pod_extra_secrets }}"
  configMaps: "{{ k8s_monitoring_prometheus_pod_extra_configmaps }}"
  
  serviceAccount:
    create: "{{ _k8s_monitoring_prometheus_service_account_create }}"
    name: "{{ _k8s_monitoring_prometheus_service_account_name }}"
    annotations: "{{ _k8s_monitoring_prometheus_service_account_annotations }}"
    automountServiceAccountToken: "{{ _k8s_monitoring_prometheus_service_account_automount }}"

  podSecurityContext: "{{ _k8s_monitoring_prometheus_pod_security_context | to_nice_yaml(indent=2) }}"
  containerSecurityContext: "{{ _k8s_monitoring_prometheus_container_security_context | to_nice_yaml(indent=2) }}"

  pdb: {{ _k8s_monitoring_prometheus_pod_disruption_budget | to_nice_yaml(indent=2) }}

  service:
    type: "{{ _k8s_monitoring_prometheus_service_type }}"
    ports:
      http: "{{ k8s_monitoring_prometheus_service_port }}"
    annotations: "{{ k8s_monitoring_prometheus_service_annotations }}"
    labels: "{{ k8s_monitoring_prometheus_service_labels }}"

  networkPolicy:
    enabled: "{{ _k8s_monitoring_prometheus_network_policy_enabled }}"
    allowExternal: "{{ _k8s_monitoring_prometheus_network_policy_allow_external }}"
    allowExternalEgress: "{{ _k8s_monitoring_prometheus_network_policy_allow_external_egress }}"
    extraIngress: "{{ _k8s_monitoring_prometheus_network_policy_extra_ingress_rules }}"
    extraEgress: "{{ _k8s_monitoring_prometheus_network_policy_extra_egress_rules }}"

    {% if _k8s_monitoring_prometheus_network_policy_extra_config | length > 0 %}

    {{ _k8s_monitoring_prometheus_network_policy_extra_config | to_nice_yaml(indent=4) }}

    {% endif %}

  serviceMonitor:
    enabled: "{{ k8s_monitoring_prometheus_service_monitor_enabled }}"
    interval: "{{ k8s_monitoring_prometheus_service_monitor_scrape_interval }}"

    {% if k8s_monitoring_prometheus_service_monitor_extra_config | length > 0 %}

    {{ k8s_monitoring_prometheus_service_monitor_extra_config | to_nice_yaml(indent=4) }}

    {% endif %}

  ingress:
    enabled: "{{ _k8s_monitoring_prometheus_ingress_enabled }}"
    ingressClassName: "{{ _k8s_monitoring_prometheus_ingress_class }}"

    annotations: "{{ _k8s_monitoring_prometheus_ingress_annotations }}"
    labels: "{{ _k8s_monitoring_prometheus_ingress_labels }}"
    secrets: "{{ _k8s_monitoring_prometheus_ingress_secrets }}"

    hostname: "{{ _k8s_monitoring_prometheus_ingress_hostame }}"
    path: "{{ _k8s_monitoring_prometheus_ingress_path }}"
    tls: "{{ _k8s_monitoring_prometheus_ingress_tls }}"
    selfSigned: "{{ _k8s_monitoring_prometheus_ingress_tls_self_signed }}"

    extraHosts: "{{ _k8s_monitoring_prometheus_ingress_extra_hosts }}"
    extraTls: "{{ _k8s_monitoring_prometheus_ingress_extra_tls }}"
    extraPaths: "{{ _k8s_monitoring_prometheus_ingress_extra_paths }}"
    extraRules: "{{ _k8s_monitoring_prometheus_ingress_extra_rules }}"

  resources:
    limits:
      cpu: "{{ k8s_monitoring_prometheus_pod_limits_cpu }}"
      memory: "{{ k8s_monitoring_prometheus_pod_limits_memory }}"
    requests:
      cpu: "{{ k8s_monitoring_prometheus_pod_requests_cpu }}"
      memory: "{{ k8s_monitoring_prometheus_pod_requests_memory }}"

  {% if k8s_monitoring_prometheus_extra_config | length > 0 %}
  
    {{ k8s_monitoring_prometheus_extra_config | to_nice_yaml(indent=2) }}
  
  {% endif %}

  thanos:
    create: "{{ _k8s_monitoring_prometheus_thanos_enabled }}"

alertmanager:
  enabled: "{{ k8s_monitoring_alertmanager_enabled }}"

  image:
    tag: "{{ _k8s_monitoring_alertmanager_image_tag }}"

  secrets: "{{ _k8s_monitoring_alertmanager_pod_extra_secrets }}"
  configMaps: "{{ _k8s_monitoring_alertmanager_pod_extra_configmaps }}"

  serviceAccount:
    create: "{{ _k8s_monitoring_alertmanager_service_account_create }}"
    name: "{{ _k8s_monitoring_alertmanager_service_account_name }}"
    annotations: "{{ _k8s_monitoring_alertmanager_service_account_annotations }}"
    automountServiceAccountToken: "{{ _k8s_monitoring_alertmanager_service_account_automount }}"

  podSecurityContext: "{{ _k8s_monitoring_alertmanager_pod_security_context | to_nice_yaml(indent=2) }}"
  containerSecurityContext: "{{ _k8s_monitoring_alertmanager_container_security_context | to_nice_yaml(indent=2) }}"

  pdb: {{ _k8s_monitoring_alertmanager_pod_disruption_budget | to_nice_yaml(indent=2) }}

  service:
    type: "{{ _k8s_monitoring_alertmanager_service_type }}"
    ports:
      http: "{{ k8s_monitoring_alertmanager_service_port }}"
    annotations: "{{ k8s_monitoring_alertmanager_service_annotations }}"
    labels: "{{ k8s_monitoring_alertmanager_service_labels }}"

  networkPolicy:
    enabled: "{{ _k8s_monitoring_alertmanager_network_policy_enabled }}"
    allowExternal: "{{ _k8s_monitoring_alertmanager_network_policy_allow_external }}"
    allowExternalEgress: "{{ _k8s_monitoring_alertmanager_network_policy_allow_external_egress }}"
    extraIngress: "{{ _k8s_monitoring_alertmanager_network_policy_extra_ingress_rules }}"
    extraEgress: "{{ _k8s_monitoring_alertmanager_network_policy_extra_egress_rules }}"

    {% if _k8s_monitoring_alertmanager_network_policy_extra_config | length > 0 %}

    {{ _k8s_monitoring_alertmanager_network_policy_extra_config | to_nice_yaml(indent=4) }}

    {% endif %}

  serviceMonitor:
    enabled: "{{ k8s_monitoring_alertmanager_service_monitor_enabled }}"
    interval: "{{ k8s_monitoring_alertmanager_service_monitor_scrape_interval }}"
    scrapeTimeout: "{{ k8s_monitoring_alertmanager_service_monitor_scrape_timeout }}"

    {% if k8s_monitoring_alertmanager_service_monitor_extra_config | length > 0 %}

    {{ k8s_monitoring_alertmanager_service_monitor_extra_config | to_nice_yaml(indent=4) }}

    {% endif %}

  ingress:
    enabled: "{{ _k8s_monitoring_alertmanager_ingress_enabled }}"
    ingressClassName: "{{ _k8s_monitoring_alertmanager_ingress_class }}"

    annotations: "{{ _k8s_monitoring_alertmanager_ingress_annotations }}"
    labels: "{{ _k8s_monitoring_alertmanager_ingress_labels }}"
    secrets: "{{ _k8s_monitoring_alertmanager_ingress_secrets }}"

    hostname: "{{ _k8s_monitoring_alertmanager_ingress_hostame }}"
    path: "{{ _k8s_monitoring_alertmanager_ingress_path }}"
    tls: "{{ _k8s_monitoring_alertmanager_ingress_tls }}"
    selfSigned: "{{ _k8s_monitoring_alertmanager_ingress_tls_self_signed }}"

    extraHosts: "{{ _k8s_monitoring_alertmanager_ingress_extra_hosts }}"
    extraTls: "{{ _k8s_monitoring_alertmanager_ingress_extra_tls }}"
    extraPaths: "{{ _k8s_monitoring_alertmanager_ingress_extra_paths }}"
    extraRules: "{{ _k8s_monitoring_alertmanager_ingress_extra_rules }}"

  resources:
    limits:
      cpu: "{{ k8s_monitoring_alertmanager_pod_limits_cpu }}"
      memory: "{{ k8s_monitoring_alertmanager_pod_limits_memory }}"
    requests:
      cpu: "{{ k8s_monitoring_alertmanager_pod_requests_cpu }}"
      memory: "{{ k8s_monitoring_alertmanager_pod_requests_memory }}"

  externalConfig: "{{ _k8s_monitoring_alertmanager_enable_external_config }}"
  config:
    global:
      resolve_timeout: "{{ k8s_monitoring_alertmanager_resolve_timeout }}"
    route:
      group_by: "{{ k8s_monitoring_alertmanager_route_group_by }}"
      group_wait: "{{ k8s_monitoring_alertmanager_route_group_wait }}"
      group_interval: "{{ k8s_monitoring_alertmanager_route_group_interval }}"
      repeat_interval: "{{ k8s_monitoring_alertmanager_route_repeat_interval }}"
      receiver: "{{ k8s_monitoring_alertmanager_route_receiver }}"
      routes: "{{ k8s_monitoring_alertmanager_route_routes | to_nice_yaml(indent=8) }}"
    receivers: "{{ k8s_monitoring_alertmanager_receivers | to_nice_yaml(indent=6) }}"
  templateFiles: "{{ k8s_monitoring_alertmanager_template_files | to_nice_yaml(indent=4) }}"

  retention: "{{ k8s_monitoring_alertmanager_retention }}"
  persistence:
    enabled: "{{ k8s_monitoring_alertmanager_persistence_enabled }}"
    size: "{{ k8s_monitoring_alertmanager_persistence_storage_size }}"
    storageClass: "{{ k8s_monitoring_alertmanager_persistence_storage_class }}"
    accessModes: "{{ k8s_monitoring_alertmanager_persistence_access_mode }}"
    annotations: "{{ k8s_monitoring_alertmanager_persistence_annotations }}"

  volumes: {{ _k8s_monitoring_alertmanager_persistence_extra_volumes | to_nice_yaml(indent=2)}}
  volumeMounts: {{ _k8s_monitoring_alertmanager_persistence_extra_volume_mounts | to_nice_yaml(indent=2)}}

  configSelector: "{{ _k8s_monitoring_alertmanager_configs_selector | to_nice_yaml(indent=4) }}"

  {% if k8s_monitoring_alertmanager_extra_config | length > 0 %}
  
    {{ k8s_monitoring_alertmanager_extra_config | to_nice_yaml(indent=2) }}
  
  {% endif %}
